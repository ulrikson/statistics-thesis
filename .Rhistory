print('hejhej')
print('hejhej')
btc_ts <- read.csv('BTCUSD.csv')
btc_ts
head(btc_ts)
ts.plot(btc_ts$Close, xlab="Day", ylab="Closing price")
returns = diff(btc_ts$Close)
returns
# nominator returns lagged difference, denominator removes last element
returns = diff(btc_ts$Close) / btc_ts$Close[-length(btc_ts$Close)]
returns
head(returns)
head(btc_ts)
7158/6902
6902/7158
6902/7158 - 1
btc <- read.csv('BTCUSD.csv')
head(btc)
ts.plot(btc$Close, xlab = "Day", ylab = "Closing price")
# nominator returns lagged difference, denominator removes last element
returns = diff(btc$Close) / btc$Close[-length(btc$Close)]
head(returns)
ts.plot(btc$Close, xlab="Day", ylab="Returns (closing price)", main="BTC returns")
ts.plot(returns, xlab="Day", ylab="Returns (closing price)", main="BTC returns")
library(forecast)
# conversion to TS necessary for seasonality
myTs = ts(returns, start=c(2020,1,1), end=c(2021,1,31), frequency=30)
arima_model = auto.arima(myts, ic = "bic", seasonal=T)
# conversion to TS necessary for seasonality
myTs = ts(returns, start=c(2020,1,1), end=c(2021,1,31), frequency=30)
arima_model = auto.arima(myTs, ic = "bic", seasonal=T)
summary(arima_model)
arima_model = auto.arima(returns, ic = "bic", seasonal=F)
summary(arima_model)
arima_returns = auto.arima(returns, ic = "bic", seasonal=F)
arima_price = auto.arima(btc$Close, ic='bic', seasonal=F)
summary(arima_returns)
summary(arima_price)
ts.plot(returns, xlab="Day", ylab="Returns (closing price)", main="BTC returns (daily)")
ts.plot(returns[300:], xlab="Day", ylab="Returns (closing price)", main="BTC returns (daily)")
ts.plot(returns[300:400], xlab="Day", ylab="Returns (closing price)", main="BTC returns (daily)")
# Reading data set (this is per day, and just for testing)
btc <- read.csv('BTCUSD_Week.csv')
# Reading data set (this is per day, and just for testing)
btc <- read.csv('BTCUSD_Week.csv')
head(btc)
ts.plot(btc$Close, xlab = "Week", ylab = "Closing price")
# nominator returns lagged difference, denominator removes last element
returns = diff(btc$Close) / btc$Close[-length(btc$Close)]
head(returns)
ts.plot(returns, xlab="Day", ylab="Returns (closing price)", main="BTC returns (daily)")
arima_returns = auto.arima(returns, ic = "bic", seasonal = F)
arima_price = auto.arima(btc$Close, ic = 'bic', seasonal = F)
summary(arima_returns)
summary(arima_price)
ts.plot(returns[150:200],
xlab = "Day",
ylab = "Returns (closing price)",
main = "BTC returns (weekly)")
ts.plot(returns,
xlab = "Day",
ylab = "Returns (closing price)",
main = "BTC returns (weekly)")
help(ts.plot)
help(plot)
abline(0)
ts.plot(returns,
xlab = "Day",
ylab = "Returns (closing price)",
main = "BTC returns (weekly)")
abline(a=0)
abline(a=0,0)
abline(a=0,0, col="red")
ts.plot(btc$Close, xlab = "Week", ylab = "Closing price")
ts.plot(btc$Close[180:200], xlab = "Week", ylab = "Closing price")
ts.plot(returns[180:200],
xlab = "Day",
ylab = "Returns (closing price)",
main = "BTC returns (weekly)")
ts.plot(btc$Close[180:200], xlab = "Week", ylab = "Closing price")
ts.plot(returns[180:200],
xlab = "Day",
ylab = "Returns (closing price)",
main = "BTC returns (weekly)")
ts.plot(returns,
xlab = "Day",
ylab = "Returns (closing price)",
main = "BTC returns (weekly)")
ts.plot(btc$Close, xlab = "Week", ylab = "Closing price")
ts.plot(returns,
xlab = "Day",
ylab = "Returns (closing price)",
main = "BTC returns (weekly)")
abline(a=0,0, col="red")
